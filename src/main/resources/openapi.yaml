openapi: 3.0.1
info:
  title: Сервис купли-продажи
  description: API для сервиса купли-продажи товаров (аналог Avito)
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Пользователь
    description: Методы, доступные для пользователей
  - name: Администратор
    description: Методы, доступные администраторам
  - name: Модератор
    description: Методы, доступные модераторам
  - name: Категории
    description: Методы для управления категориями
  - name: Объявления
    description: Методы для управления объявлениями
  - name: Сообщения
    description: Методы для отправки и получения сообщений
  - name: Отзывы
    description: Методы для оставления отзывов и рейтингов

paths:
  /api/users/register:
    post:
      tags:
        - Пользователь
      summary: Регистрация нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/login:
    post:
      tags:
        - Пользователь
      summary: Аутентификация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: string
                example: "User logged in"
  /api/ads:
    post:
      tags:
        - Объявления
      summary: Создание объявления
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ad'
      responses:
        '200':
          description: Объявление создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
    get:
      tags:
        - Объявления
      summary: Получение списка объявлений
      responses:
        '200':
          description: Список объявлений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ad'
  /api/ads/{id}:
    get:
      tags:
        - Объявления
      summary: Получение объявления по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Объявление найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
    delete:
      tags:
        - Объявления
      summary: Удаление объявления
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Объявление удалено
  /api/categories:
    get:
      tags:
        - Категории
      summary: Получение списка категорий
      responses:
        '200':
          description: Список категорий
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - Категории
      summary: Создание категории
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Категория создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /api/categories/{id}:
    put:
      tags:
        - Категории
      summary: Обновление категории
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Категория обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
        - Категории
      summary: Удаление категории
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Категория удалена
  /api/admin/users:
    post:
      tags:
        - Администратор
      summary: Создание пользователя администратором
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - Администратор
      summary: Получение информации о пользователях
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/admin/users/{id}:
    delete:
      tags:
        - Администратор
      summary: Удаление пользователя администратором
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Пользователь удален
  /api/admin/users/{id}/role:
    put:
      tags:
        - Администратор
      summary: Изменение роли пользователя администратором
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdate'
      responses:
        '200':
          description: Роль пользователя обновлена
  /api/admin/ads/{id}/status:
    put:
      tags:
        - Администратор
      summary: Изменение статуса объявления администратором
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdStatusUpdate'
      responses:
        '200':
          description: Статус объявления обновлен
  /api/workers/categories:
    post:
      tags:
        - Модератор
      summary: Управление категориями товаров (создание)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Категория создана
    put:
      tags:
        - Модератор
      summary: Управление категориями товаров (редактирование)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Категория обновлена
  /api/workers/categories/{id}:
    delete:
      tags:
        - Модератор
      summary: Управление категориями товаров (удаление)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Категория удалена
  /api/workers/ads/{id}/moderation:
    put:
      tags:
        - Модератор
      summary: Модерация объявлений
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Moderation'
      responses:
        '200':
          description: Объявление модерировано
  /api/messages:
    post:
      tags:
        - Сообщения
      summary: Отправка сообщения
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Сообщение отправлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    get:
      tags:
        - Сообщения
      summary: Получение сообщений
      responses:
        '200':
          description: Список сообщений
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
  /api/reviews:
    post:
      tags:
        - Отзывы
      summary: Оставление отзыва
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Отзыв оставлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
    get:
      tags:
        - Отзывы
      summary: Получение списка отзывов
      responses:
        '200':
          description: Список отзывов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Ad:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        category:
          type: string
        price:
          type: number
          format: double
        user:
          $ref: '#/components/schemas/User'
        photo:
          type: string
          format: binary
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
    RoleUpdate:
      type: object
      properties:
        role:
          type: string
          enum: [USER, ADMIN, WORKER, MANAGER]
    AdStatusUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [IN_REVIEW, APPROVED, REJECTED, PUBLISHED]
    Moderation:
      type: object
      properties:
        status:
          type: string
          enum: [FROZEN, UNFROZEN]
        reason:
          type: string
    Message:
      type: object
      properties:
        id:
          type: integer
        sender:
          $ref: '#/components/schemas/User'
        receiver:
          $ref: '#/components/schemas/User'
        content:
          type: string
    Review:
      type: object
      properties:
        id:
          type: integer
        user:
          $ref: '#/components/schemas/User'
        ad:
          $ref: '#/components/schemas/Ad'
        rating:
          type: integer
        comment:
          type: string
